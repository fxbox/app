{"version":3,"sources":["js/components/mvc.js"],"names":["global","setUpChangesDelivery","clearImmediate","changeDeliveryImmediateUid","setImmediate","_deliverAllChangeRecords","_beginChange","object","changeType","notifier","Object","getNotifier","activeChanges","activeChangesMap","get","changeCount","_endChange","_shouldDeliverToObserver","acceptList","doesAccept","i","l","length","accept","_getNotifier","target","notifierMap","has","create","NotifierPrototype","defineProperty","value","changeObserversMap","set","_enqueueChangeRecord","changeRecord","type","changeObservers","observerRecord","observer","callback","pendingChangeRecords","pendingChangesMap","push","_cleanObserver","attachedNotifierCountMap","index","observerCallbacks","indexOf","splice","_deliverChangeRecords","call","undefined","e","observers","slice","anyWorkDone","msSetImmediate","msClearImmediate","func","args","setTimeout","id","clearTimeout","PrivateMap","WeakMap","HIDDEN_PREFIX","Math","random","counter","Date","getTime","mascot","this","name","prototype","key","hasOwnProperty","enumerable","writable","configurable","delete","getOwnPropertyName","getOwnPropertyNames","obj","filter","substr","TypeError","__target","newRecord","prop","preventExtensions","changeFn","error","defineProperties","observe","isFrozen","len","nextIndex","next","unobserve","deliverChangeRecords","isAccessorDescriptor","desc","getPropertyDescriptor","pd","getOwnPropertyDescriptor","proto","getPrototypeOf","sameValue","x","y","isPositiveFiniteInteger","errorMessage","Number","isNaN","isFinite","RangeError","replace","defineObservableProperty","property","originalValue","internalPropName","uidCounter","oldValue","notify","List","arguments","fromArray","arrSlice","ObserveUtils","exports","Function","bind","Array","arrMap","map","defineObservableProperties","properties","shift","descriptor","list","array","isArray","Error","_length","removed","self","performChange","returnValue","addedCount","toArray","toString","toJSON","concat","item","apply","join","separator","pop","newLen","element","argumentsLength","elements","reverse","copy","arr","start","end","sort","compareFn","unshift","reduce","reduceRight","lastIndexOf","every","thisObject","forEach","some","define","root","factory","amd","module","Sanitizer","_entity","_entities","&","<",">","\"","'","/","getEntity","s","escapeHTML","strings","result","String","createSafeHTML","_len","values","_key","escaped","__html","info","unwrapSafeHTML","htmlObjects","markupList","window","handleAction","event","controller","action","dataset","delegateHandler","events","delegate","scope","contains","matches","selector","handler","_extends","child","parent","constructor","__proto__","Model","_this","observableProperties","changes","change","handlers","on","View","options","el","document","createElement","init","layout","template","render","params","innerHTML","param","$","querySelector","$$","querySelectorAll","addEventListener","off","Controller","view","teardown","main","RoutingController","controllers","routingController","console","_controllers","activeController","route","location","hash","routeName","regexp","RegExp","match","Service","_listeners","_dispatchedEvents","trigger","_this2","removeEventListener","listenerIndex","find","listener","_dispatchEvent"],"mappings":"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","file":"js/components/mvc.js","sourcesContent":["//    Copyright 2012 Kap IT (http://www.kapit.fr/)\n//\n//    Licensed under the Apache License, Version 2.0 (the 'License');\n//    you may not use this file except in compliance with the License.\n//    You may obtain a copy of the License at\n//\n//        http://www.apache.org/licenses/LICENSE-2.0\n//\n//    Unless required by applicable law or agreed to in writing, software\n//    distributed under the License is distributed on an 'AS IS' BASIS,\n//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n//    See the License for the specific language governing permissions and\n//    limitations under the License.\n//    Author : François de Campredon (http://francois.de-campredon.fr/),\n\n// Object.observe Shim\n// ===================\n\n// *See [The harmony proposal page](http://wiki.ecmascript.org/doku.php?id=harmony:observe)*\n\n(function (global) {\n    'use strict';\n\n    // Utilities\n    // ---------\n\n    // setImmediate shim used to deliver changes records asynchronously\n    // use setImmediate if available\n    var setImmediate = global.setImmediate || global.msSetImmediate,\n        clearImmediate = global.clearImmediate || global.msClearImmediate;\n    if (!setImmediate) {\n        // fallback on setTimeout if not\n        setImmediate = function (func, args) {\n            return setTimeout(func, 0, args);\n        };\n        clearImmediate = function (id) {\n            clearTimeout(id);\n        };\n    }\n\n\n    // WeakMap\n    // -------\n\n    var PrivateMap;\n    if (typeof WeakMap !== 'undefined')  {\n        //use weakmap if defined\n        PrivateMap = WeakMap;\n    } else {\n        //else use ses like shim of WeakMap\n        /* jshint -W016 */\n        var HIDDEN_PREFIX = '__weakmap:' + (Math.random() * 1e9 >>> 0),\n            counter = new Date().getTime() % 1e9,\n            mascot = {};\n\n        PrivateMap = function () {\n            this.name = HIDDEN_PREFIX + (Math.random() * 1e9 >>> 0) + (counter++ + '__');\n        };\n\n        PrivateMap.prototype = {\n            has: function (key) {\n                return key && key.hasOwnProperty(this.name);\n            },\n\n            get: function (key) {\n                var value = key && key[this.name];\n                return value === mascot ? undefined : value;\n            },\n\n            set: function (key, value) {\n                Object.defineProperty(key, this.name, {\n                    value : typeof value === 'undefined' ? mascot : value,\n                    enumerable: false,\n                    writable : true,\n                    configurable: true\n                });\n            },\n\n            'delete': function (key) {\n                return delete key[this.name];\n            }\n        };\n\n\n        var getOwnPropertyName = Object.getOwnPropertyNames;\n        Object.defineProperty(Object, 'getOwnPropertyNames', {\n            value: function fakeGetOwnPropertyNames(obj) {\n                return getOwnPropertyName(obj).filter(function (name) {\n                    return name.substr(0, HIDDEN_PREFIX.length) !== HIDDEN_PREFIX;\n                });\n            },\n            writable: true,\n            enumerable: false,\n            configurable: true\n        });\n    }\n\n\n    // Internal Properties\n    // -------------------\n\n    // An ordered list used to provide a deterministic ordering in which callbacks are called.\n    // [Corresponding Section in ECMAScript wiki](http://wiki.ecmascript.org/doku.php?id=harmony:observe_internals#observercallbacks)\n    var observerCallbacks = [];\n\n    // This object is used as the prototype of all the notifiers that are returned by Object.getNotifier(O).\n    // [Corresponding Section in ECMAScript wiki](http://wiki.ecmascript.org/doku.php?id=harmony:observe_internals#notifierprototype)\n    var NotifierPrototype = Object.create(Object.prototype);\n\n    // Used to store immediate uid reference\n    var changeDeliveryImmediateUid;\n\n    // Used to schedule a call to _deliverAllChangeRecords\n    function setUpChangesDelivery() {\n        clearImmediate(changeDeliveryImmediateUid);\n        changeDeliveryImmediateUid = setImmediate(_deliverAllChangeRecords);\n    }\n\n    Object.defineProperty(NotifierPrototype, 'notify', {\n        value: function notify(changeRecord) {\n            var notifier = this;\n            if (Object(notifier) !== notifier) {\n                throw new TypeError('this must be an Object, given ' + notifier);\n            }\n            if (!notifier.__target) {\n                return;\n            }\n            if (Object(changeRecord) !== changeRecord) {\n                throw new TypeError('changeRecord must be an Object, given ' + changeRecord);\n            }\n\n\n            var type = changeRecord.type;\n            if (typeof type !== 'string') {\n                throw new TypeError('changeRecord.type must be a string, given ' + type);\n            }\n\n            var changeObservers = changeObserversMap.get(notifier);\n            if (!changeObservers || changeObservers.length === 0) {\n                return;\n            }\n            var target = notifier.__target,\n                newRecord = Object.create(Object.prototype, {\n                    'object': {\n                        value: target,\n                        writable : false,\n                        enumerable : true,\n                        configurable: false\n                    }\n                });\n            for (var prop in changeRecord) {\n                if (prop !== 'object') {\n                    var value = changeRecord[prop];\n                    Object.defineProperty(newRecord, prop, {\n                        value: value,\n                        writable : false,\n                        enumerable : true,\n                        configurable: false\n                    });\n                }\n            }\n            Object.preventExtensions(newRecord);\n            _enqueueChangeRecord(notifier.__target, newRecord);\n        },\n        writable: true,\n        enumerable: false,\n        configurable : true\n    });\n\n    Object.defineProperty(NotifierPrototype, 'performChange', {\n        value: function performChange(changeType, changeFn) {\n            var notifier = this;\n            if (Object(notifier) !== notifier) {\n                throw new TypeError('this must be an Object, given ' + notifier);\n            }\n            if (!notifier.__target) {\n                return;\n            }\n            if (typeof changeType !== 'string') {\n                throw new TypeError('changeType must be a string given ' + notifier);\n            }\n            if (typeof changeFn !== 'function') {\n                throw new TypeError('changeFn must be a function, given ' + changeFn);\n            }\n\n            _beginChange(notifier.__target, changeType);\n            var error, changeRecord;\n            try {\n                changeRecord = changeFn.call(undefined);\n            } catch (e) {\n                error = e;\n            }\n            _endChange(notifier.__target, changeType);\n            if (typeof error !== 'undefined') {\n                throw error;\n            }\n\n            var changeObservers = changeObserversMap.get(notifier);\n            if (changeObservers.length === 0) {\n                return;\n            }\n\n            var target = notifier.__target,\n                newRecord = Object.create(Object.prototype, {\n                    'object': {\n                        value: target,\n                        writable : false,\n                        enumerable : true,\n                        configurable: false\n                    },\n                    'type': {\n                        value: changeType,\n                        writable : false,\n                        enumerable : true,\n                        configurable: false\n                    }\n                });\n            if (typeof changeRecord !== 'undefined') {\n                for (var prop in changeRecord) {\n                    if (prop !== 'object' && prop !== 'type') {\n                        var value = changeRecord[prop];\n                        Object.defineProperty(newRecord, prop, {\n                            value: value,\n                            writable : false,\n                            enumerable : true,\n                            configurable: false\n                        });\n                    }\n                }\n            }\n\n            Object.preventExtensions(newRecord);\n            _enqueueChangeRecord(notifier.__target, newRecord);\n\n        },\n        writable: true,\n        enumerable: false,\n        configurable : true\n    });\n\n    // Implementation of the internal algorithm 'BeginChange'\n    // described in the proposal.\n    // [Corresponding Section in ECMAScript wiki](http://wiki.ecmascript.org/doku.php?id=harmony:observe_internals#beginchange)\n    function _beginChange(object, changeType) {\n        var notifier = Object.getNotifier(object),\n            activeChanges = activeChangesMap.get(notifier),\n            changeCount = activeChangesMap.get(notifier)[changeType];\n        activeChanges[changeType] = typeof changeCount === 'undefined' ? 1 : changeCount + 1;\n    }\n\n    // Implementation of the internal algorithm 'EndChange'\n    // described in the proposal.\n    // [Corresponding Section in ECMAScript wiki](http://wiki.ecmascript.org/doku.php?id=harmony:observe_internals#endchange)\n    function _endChange(object, changeType) {\n        var notifier = Object.getNotifier(object),\n            activeChanges = activeChangesMap.get(notifier),\n            changeCount = activeChangesMap.get(notifier)[changeType];\n        activeChanges[changeType] = changeCount > 0 ? changeCount - 1 : 0;\n    }\n\n    // Implementation of the internal algorithm 'ShouldDeliverToObserver'\n    // described in the proposal.\n    // [Corresponding Section in ECMAScript wiki](http://wiki.ecmascript.org/doku.php?id=harmony:observe_internals#shoulddelivertoobserver)\n    function _shouldDeliverToObserver(activeChanges, acceptList, changeType) {\n        var doesAccept = false;\n        if (acceptList) {\n            for (var i = 0, l = acceptList.length; i < l; i++) {\n                var accept = acceptList[i];\n                if (activeChanges[accept] > 0) {\n                    return false;\n                }\n                if (accept === changeType) {\n                    doesAccept = true;\n                }\n            }\n        }\n        return doesAccept;\n    }\n\n\n    // Map used to store corresponding notifier to an object\n    var notifierMap = new PrivateMap(),\n        changeObserversMap = new PrivateMap(),\n        activeChangesMap = new PrivateMap();\n\n    // Implementation of the internal algorithm 'GetNotifier'\n    // described in the proposal.\n    // [Corresponding Section in ECMAScript wiki](http://wiki.ecmascript.org/doku.php?id=harmony:observe_internals#getnotifier)\n    function _getNotifier(target) {\n        if (!notifierMap.has(target)) {\n            var notifier = Object.create(NotifierPrototype);\n            // we does not really need to hide this, since anyway the host object is accessible from outside of the\n            // implementation. we just make it unwritable\n            Object.defineProperty(notifier, '__target', { value : target });\n            changeObserversMap.set(notifier, []);\n            activeChangesMap.set(notifier, {});\n            notifierMap.set(target, notifier);\n        }\n        return notifierMap.get(target);\n    }\n\n\n\n    // map used to store reference to a list of pending changeRecords\n    // in observer callback.\n    var pendingChangesMap = new PrivateMap();\n\n    // Implementation of the internal algorithm 'EnqueueChangeRecord'\n    // described in the proposal.\n    // [Corresponding Section in ECMAScript wiki](http://wiki.ecmascript.org/doku.php?id=harmony:observe_internals#enqueuechangerecord)\n    function _enqueueChangeRecord(object, changeRecord) {\n        var notifier = Object.getNotifier(object),\n            changeType = changeRecord.type,\n            activeChanges = activeChangesMap.get(notifier),\n            changeObservers = changeObserversMap.get(notifier);\n\n        for (var i = 0, l = changeObservers.length; i < l; i++) {\n            var observerRecord = changeObservers[i],\n                acceptList = observerRecord.accept;\n            if (_shouldDeliverToObserver(activeChanges, acceptList, changeType)) {\n                var observer = observerRecord.callback,\n                    pendingChangeRecords = [];\n                if (!pendingChangesMap.has(observer))  {\n                    pendingChangesMap.set(observer, pendingChangeRecords);\n                } else {\n                    pendingChangeRecords = pendingChangesMap.get(observer);\n                }\n                pendingChangeRecords.push(changeRecord);\n            }\n        }\n        setUpChangesDelivery();\n    }\n\n    // map used to store a count of associated notifier to a function\n    var attachedNotifierCountMap = new PrivateMap();\n\n    // Remove reference all reference to an observer callback,\n    // if this one is not used anymore.\n    // In the proposal the ObserverCallBack has a weak reference over observers,\n    // Without this possibility we need to clean this list to avoid memory leak\n    function _cleanObserver(observer) {\n        if (!attachedNotifierCountMap.get(observer) && !pendingChangesMap.has(observer)) {\n            attachedNotifierCountMap.delete(observer);\n            var index = observerCallbacks.indexOf(observer);\n            if (index !== -1) {\n                observerCallbacks.splice(index, 1);\n            }\n        }\n    }\n\n    // Implementation of the internal algorithm 'DeliverChangeRecords'\n    // described in the proposal.\n    // [Corresponding Section in ECMAScript wiki](http://wiki.ecmascript.org/doku.php?id=harmony:observe_internals#deliverchangerecords)\n    function _deliverChangeRecords(observer) {\n        var pendingChangeRecords = pendingChangesMap.get(observer);\n        pendingChangesMap.delete(observer);\n        if (!pendingChangeRecords || pendingChangeRecords.length === 0) {\n            return false;\n        }\n        try {\n            observer.call(undefined, pendingChangeRecords);\n        }\n        catch (e) { }\n\n        _cleanObserver(observer);\n        return true;\n    }\n\n    // Implementation of the internal algorithm 'DeliverAllChangeRecords'\n    // described in the proposal.\n    // [Corresponding Section in ECMAScript wiki](http://wiki.ecmascript.org/doku.php?id=harmony:observe_internals#deliverallchangerecords)\n    function _deliverAllChangeRecords() {\n        var observers = observerCallbacks.slice();\n        var anyWorkDone = false;\n        for (var i = 0, l = observers.length; i < l; i++) {\n            var observer = observers[i];\n            if (_deliverChangeRecords(observer)) {\n                anyWorkDone = true;\n            }\n        }\n        return anyWorkDone;\n    }\n\n\n    Object.defineProperties(Object, {\n        // Implementation of the public api 'Object.observe'\n        // described in the proposal.\n        // [Corresponding Section in ECMAScript wiki](http://wiki.ecmascript.org/doku.php?id=harmony:observe_public_api#object.observe)\n        'observe': {\n            value: function observe(target, callback, accept) {\n                if (Object(target) !== target) {\n                    throw new TypeError('target must be an Object, given ' + target);\n                }\n                if (typeof callback !== 'function') {\n                    throw new TypeError('observer must be a function, given ' + callback);\n                }\n                if (Object.isFrozen(callback)) {\n                    throw new TypeError('observer cannot be frozen');\n                }\n\n                var acceptList;\n                if (typeof accept === 'undefined') {\n                    acceptList = ['add', 'update', 'delete', 'reconfigure', 'setPrototype', 'preventExtensions'];\n                } else {\n                    if (Object(accept) !== accept) {\n                        throw new TypeError('accept must be an object, given ' + accept);\n                    }\n                    var len = accept.length;\n                    if (typeof len !== 'number' || len >>> 0 !== len || len < 1) {\n                        throw new TypeError('the \\'length\\' property of accept must be a positive integer, given ' + len);\n                    }\n\n                    var nextIndex = 0;\n                    acceptList = [];\n                    while (nextIndex < len) {\n                        var next = accept[nextIndex];\n                        if (typeof next !== 'string') {\n                            throw new TypeError('accept must contains only string, given' + next);\n                        }\n                        acceptList.push(next);\n                        nextIndex++;\n                    }\n                }\n\n\n                var notifier = _getNotifier(target),\n                    changeObservers = changeObserversMap.get(notifier);\n\n                for (var i = 0, l = changeObservers.length; i < l; i++) {\n                    if (changeObservers[i].callback === callback) {\n                        changeObservers[i].accept = acceptList;\n                        return target;\n                    }\n                }\n\n                changeObservers.push({\n                    callback: callback,\n                    accept: acceptList\n                });\n\n                if (observerCallbacks.indexOf(callback) === -1)  {\n                    observerCallbacks.push(callback);\n                }\n                if (!attachedNotifierCountMap.has(callback)) {\n                    attachedNotifierCountMap.set(callback, 1);\n                } else {\n                    attachedNotifierCountMap.set(callback, attachedNotifierCountMap.get(callback) + 1);\n                }\n                return target;\n            },\n            writable: true,\n            configurable: true\n        },\n\n        // Implementation of the public api 'Object.unobseve'\n        // described in the proposal.\n        // [Corresponding Section in ECMAScript wiki](http://wiki.ecmascript.org/doku.php?id=harmony:observe_public_api#object.unobseve)\n        'unobserve': {\n            value: function unobserve(target, callback) {\n                if (Object(target) !== target) {\n                    throw new TypeError('target must be an Object, given ' + target);\n                }\n                if (typeof callback !== 'function') {\n                    throw new TypeError('observer must be a function, given ' + callback);\n                }\n                var notifier = _getNotifier(target),\n                    changeObservers = changeObserversMap.get(notifier);\n                for (var i = 0, l = changeObservers.length; i < l; i++) {\n                    if (changeObservers[i].callback === callback) {\n                        changeObservers.splice(i, 1);\n                        attachedNotifierCountMap.set(callback, attachedNotifierCountMap.get(callback) - 1);\n                        _cleanObserver(callback);\n                        break;\n                    }\n                }\n                return target;\n            },\n            writable: true,\n            configurable: true\n        },\n\n        // Implementation of the public api 'Object.deliverChangeRecords'\n        // described in the proposal.\n        // [Corresponding Section in ECMAScript wiki](http://wiki.ecmascript.org/doku.php?id=harmony:observe_public_api#object.deliverchangerecords)\n        'deliverChangeRecords': {\n            value: function deliverChangeRecords(observer) {\n                if (typeof observer !== 'function') {\n                    throw new TypeError('callback must be a function, given ' + observer);\n                }\n                while (_deliverChangeRecords(observer)) {}\n            },\n            writable: true,\n            configurable: true\n        },\n\n        // Implementation of the public api 'Object.getNotifier'\n        // described in the proposal.\n        // [Corresponding Section in ECMAScript wiki](http://wiki.ecmascript.org/doku.php?id=harmony:observe_public_api#object.getnotifier)\n        'getNotifier': {\n            value: function getNotifier(target) {\n                if (Object(target) !== target) {\n                    throw new TypeError('target must be an Object, given ' + target);\n                }\n                if (Object.isFrozen(target)) {\n                    return null;\n                }\n                return _getNotifier(target);\n            },\n            writable: true,\n            configurable: true\n        }\n\n    });\n\n})(typeof global !== 'undefined' ? global : this);\n\n\n\n//    Copyright 2012 Kap IT (http://www.kapit.fr/)\n//\n//    Licensed under the Apache License, Version 2.0 (the 'License');\n//    you may not use this file except in compliance with the License.\n//    You may obtain a copy of the License at\n//\n//        http://www.apache.org/licenses/LICENSE-2.0\n//\n//    Unless required by applicable law or agreed to in writing, software\n//    distributed under the License is distributed on an 'AS IS' BASIS,\n//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n//    See the License for the specific language governing permissions and\n//    limitations under the License.\n//    Author : François de Campredon (http://francois.de-campredon.fr/),\n\n// ObjectUtils\n// ===========\n\n(function (global) {\n    'use strict';\n\n    /**\n     * @namespace\n     */\n    var ObserveUtils;\n    if (typeof exports !== 'undefined') {\n        ObserveUtils = exports;\n    } else {\n        ObserveUtils = global.ObserveUtils = {};\n    }\n\n    // Utilities\n    // ---------\n\n\n    // borrowing some array methods\n    var arrSlice = Function.call.bind(Array.prototype.slice),\n        arrMap = Function.call.bind(Array.prototype.map);\n\n    // return true if the given property descriptor contains accessor\n    function isAccessorDescriptor(desc) {\n        if (typeof desc === 'undefined') {\n            return false;\n        }\n        return ('get' in desc || 'set' in desc);\n    }\n\n\n\n    // getPropertyDescriptor shim\n    // copied from [es6-shim](https://github.com/paulmillr/es6-shim)\n    function getPropertyDescriptor(target, name) {\n        var pd = Object.getOwnPropertyDescriptor(target, name),\n            proto = Object.getPrototypeOf(target);\n        while (typeof pd === 'undefined' && proto !== null) {\n            pd = Object.getOwnPropertyDescriptor(proto, name);\n            proto = Object.getPrototypeOf(proto);\n        }\n        return pd;\n    }\n\n\n\n    // egal shim\n    // copied from [the ecmascript wiki](http://wiki.ecmascript.org/doku.php?id=harmony:egal)\n    function sameValue(x, y) {\n        if (x === y) {\n            // 0 === -0, but they are not identical\n            return x !== 0 || 1 / x === 1 / y;\n        }\n\n        // NaN !== NaN, but they are identical.\n        // NaNs are the only non-reflexive value, i.e., if x !== x,\n        // then x is a NaN.\n        // isNaN is broken: it converts its argument to number, so\n        // isNaN('foo') => true\n        return x !== x && y !== y;\n    }\n\n    // cast a value as number, and test if the obtained result\n    // is a positive finite integer, throw an error otherwise\n    function isPositiveFiniteInteger(value, errorMessage) {\n        value = Number(value);\n        if (isNaN(value) || !isFinite(value) || value < 0 || value % 1 !== 0) {\n            throw new RangeError(errorMessage.replace('$', value));\n        }\n        return value;\n    }\n\n    // defineObservableProperties Implementation\n    // ------------------------------------------\n\n    // Uid generation helper\n    var uidCounter = 0;\n\n    // Define a property on an object that will call the Notifier.notify method when updated\n    function defineObservableProperty(target, property, originalValue) {\n\n        //we store the value in an non-enumerable property with generated unique name\n        var internalPropName = '_' + (uidCounter++) + property;\n\n        if (target.hasOwnProperty(property)) {\n            Object.defineProperty(target, internalPropName, {\n                value: originalValue,\n                writable: true,\n                enumerable: false,\n                configurable: true\n            });\n        }\n\n        //then we create accessor method for our 'hidden' property,\n        // that dispatch changesRecords when the value is updated\n        Object.defineProperty(target, property, {\n            get: function () {\n                return this[internalPropName];\n            },\n            set: function (value) {\n                if (!sameValue(value, this[internalPropName])) {\n                    var oldValue = this[internalPropName];\n                    Object.defineProperty(this, internalPropName, {\n                        value: value,\n                        writable: true,\n                        enumerable: false,\n                        configurable: true\n                    });\n                    var notifier = Object.getNotifier(this);\n                    notifier.notify({ type: 'update', name: property, oldValue: oldValue });\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n    }\n\n\n    // call defineObservableProperty for each property name passed as 'rest argument'\n\n    /**\n     * Define observable properties on the given object an return it.\n     *\n     * @param {Object} target\n     * @param {...string} properties\n     * @returns {Object}\n     */\n    ObserveUtils.defineObservableProperties = function defineObservableProperties(target, properties) {\n        if (Object(target) !== target) {\n            throw new TypeError('target must be an Object, given ' + target);\n        }\n        properties = arrSlice(arguments, 1);\n        while (properties.length > 0) {\n            var property = properties.shift(),\n                descriptor = getPropertyDescriptor(target, property);\n\n            if (!descriptor || !isAccessorDescriptor(descriptor)) {\n                var originalValue = descriptor && descriptor.value;\n                defineObservableProperty(target, property, originalValue);\n            }\n        }\n        return target;\n    };\n\n\n\n    // List Implementation\n    // ------------------------------------------\n\n    /**\n     *\n     * @param length\n     * @returns {*}\n     * @constructor\n     * @function\n     */\n    function List(length) {\n        if (arguments.length === 0) {\n            length = 0;\n        }\n\n        // in this case we create a list with a given length\n        if (arguments.length <= 1 && typeof length === 'number') {\n            if (this instanceof List) {\n                this.length = length;\n            }\n            else {\n                return new List(length);\n            }\n        }\n        else {\n            //here we create a list with initial values\n            if (!(this instanceof List)) {\n                return List.fromArray(arrSlice(arguments));\n            }\n            else {\n                for (var i = 0, l = arguments.length ; i < l ; i++) {\n                    this[i] = arguments[i];\n                }\n                this.length = arguments.length;\n            }\n        }\n    }\n\n    /**\n     * Observe a list\n     * @param {List} list\n     * @param {function} observer\n     */\n    List.observe = function observe(list, observer) {\n        Object.observe(list, observer, ['add', 'update', 'delete', 'splice']);\n    };\n\n\n    /**\n     * Unobserve a list\n     * @param {List} list\n     * @param {function} observer\n     */\n    List.unobserve = function unobserve(list, observer) {\n        Object.unobserve(list, observer);\n    };\n\n    /**\n     * Create a list from a given array\n     * @param array\n     * @returns {List}\n     */\n    List.fromArray = function fromArray(array) {\n        if (!Array.isArray(array)) {\n            throw new Error();\n        }\n\n        var list = new List();\n        for (var i = 0, l = array.length ; i < l ; i++) {\n            list[i] = array[i];\n        }\n        list.length = array.length;\n        return list;\n    };\n\n    Object.defineProperties(List.prototype, {\n        /**\n         * hidden value holder for the length property\n         * @private\n         */\n        '_length' : {\n            value : 0,\n            enumerable: false,\n            configurable: true,\n            writable: true\n        },\n        /**\n         * the length of the list\n         * @property {number} length\n         */\n        'length' : {\n            get : function () {\n                return this._length;\n            },\n            set : function (value) {\n                value = isPositiveFiniteInteger(value, 'Invalid  list length : $');\n                var notifier = Object.getNotifier(this),\n                    oldValue = this._length,\n                    removed = [],\n                    self = this;\n                if (value !== oldValue) {\n                    notifier.performChange('splice', function () {\n                        Object.defineProperty(self, '_length', {\n                            value : value,\n                            enumerable: false,\n                            configurable: true,\n                            writable: true\n                        });\n\n                        var returnValue;\n                        if (oldValue > value) {\n                            //delete values if the length have been decreased\n                            for (var i = value; i < oldValue; i++) {\n                                removed.push(self[i]);\n                                self.delete(i);\n                            }\n                            returnValue = {\n                                index : value,\n                                removed : removed,\n                                addedCount: 0\n                            };\n                        } else {\n                            returnValue = {\n                                index : oldValue,\n                                removed : removed,\n                                addedCount: value - oldValue\n                            };\n                        }\n                        notifier.notify({ type: 'update', name: 'length', oldValue: oldValue });\n\n                        return returnValue;\n                    });\n                }\n\n            },\n            enumerable: true,\n            configurable : true\n        }\n    });\n\n    /**\n     * Returns an Array copy of the list\n     * @returns {Array}\n     */\n    List.prototype.toArray = function toArray() {\n        return arrSlice(this);\n    };\n\n    /**\n     * Returns an string representation of the list\n     * @returns {string}\n     */\n    List.prototype.toString = function toString() {\n        return this.toArray().toString();\n    };\n\n\n    /**\n     * Returns an json representation of the list\n     * @returns {string}\n     */\n    List.prototype.toJSON = function toJSON() {\n        return this.toArray();\n    };\n\n    /**\n     * set the givent value at the specified index.\n     * @param {number} index\n     * @param {*} value\n     * @return {*}\n     */\n    List.prototype.set = function set(index, value) {\n        index = isPositiveFiniteInteger(index, 'Invalid index : $');\n\n        var notifier = Object.getNotifier(this),\n            len = this.length,\n            self = this;\n        if (index >= len) {\n            notifier.performChange('splice', function () {\n                self[index] = value;\n                notifier.notify({ type: 'add', name: index});\n                Object.defineProperty(self, '_length', {\n                    value : index + 1,\n                    enumerable: false,\n                    configurable: true,\n                    writable: true\n                });\n                notifier.notify({ type: 'update', name: 'length', oldValue: len });\n\n                return {\n                    index : len,\n                    removed : [],\n                    addedCount: self.length - len\n                };\n            });\n        }\n        else if (!sameValue(value, this[index])) {\n            var oldValue = this[index];\n            this[index] = value;\n            notifier.notify({ type: 'update', name: index, oldValue: oldValue });\n        }\n        return value;\n    };\n\n    /**\n     * delete the value at the specified index.\n     * @param {number} index\n     * @return {boolean}\n     */\n    List.prototype.delete = function del(index) {\n        index = isPositiveFiniteInteger(index, 'Invalid index : $');\n        if (this.hasOwnProperty(index)) {\n            var oldValue = this[index];\n            if (delete this[index]) {\n                var notifier = Object.getNotifier(this);\n                notifier.notify({ type: 'delete', name: index, oldValue: oldValue });\n                return true;\n            }\n        }\n        return false;\n    };\n\n    /**\n     * create a new list resulting of the concatenation of all the List and array\n     * passed as parameter with the addition of other values passed as parameter\n     * @param {...*} args\n     * @return {List}\n     */\n    List.prototype.concat = function concat(args) {\n        args = arrMap(arguments, function (item) {\n            return (item instanceof List) ?  item.toArray() : item;\n        });\n        return List.fromArray(Array.prototype.concat.apply(this.toArray(), args));\n    };\n\n    /**\n     * Joins all elements of a List into a string.\n     * @param {string} [separator]\n     * @return {string}\n     */\n    List.prototype.join = function join(separator) {\n        return this.toArray().join(separator);\n    };\n\n\n    /**\n     * Removes the last element from a List and returns that element.\n     * @return {*}\n     */\n    List.prototype.pop = function pop() {\n        if (Object(this) !== this) {\n            throw new TypeError('this mus be an object given : ' + this);\n        }\n        var len = isPositiveFiniteInteger(this.length, 'this must have a finite integer property \\'length\\', given : $');\n        if (len === 0) {\n            return void(0);\n        } else {\n            var newLen = len - 1,\n                element = this[newLen],\n                notifier =  Object.getNotifier(this),\n                self = this;\n            notifier.performChange('splice', function () {\n                delete self[newLen];\n                notifier.notify({ type: 'delete', name: newLen, oldValue: element });\n                Object.defineProperty(self, '_length', {\n                    value : newLen,\n                    enumerable: false,\n                    configurable: true,\n                    writable: true\n                });\n                notifier.notify({ type: 'update', name: 'length', oldValue: len });\n\n                return {\n                    index : newLen,\n                    removed : [element],\n                    addedCount: 0\n                };\n            });\n\n\n            return element;\n        }\n    };\n\n    /**\n     * Mutates a List by appending the given elements and returning the new length of the array.\n     * @param {...*} items\n     * @return {number}\n     */\n    List.prototype.push = function push() {\n        if (arguments.length > 0) {\n            var argumentsLength = arguments.length,\n                elements = arguments,\n                len = this.length,\n                notifier = Object.getNotifier(this),\n                self = this,\n                i, index;\n            notifier.performChange('splice', function () {\n                for (i = 0; i < argumentsLength; i++) {\n                    index =  len + i;\n                    // avoid the usage of the set function and manually\n                    // set the value and notify the changes to avoid the notification of\n                    // multiple length modification\n                    self[index] = elements[i];\n                    notifier.notify({\n                        type : 'add',\n                        name : index\n                    });\n                }\n                Object.defineProperty(self, '_length', {\n                    value : len + argumentsLength,\n                    enumerable: false,\n                    configurable: true,\n                    writable: true\n                });\n                notifier.notify({ type: 'update', name: 'length', oldValue: len });\n                return {\n                    index : len,\n                    removed : [],\n                    addedCount: argumentsLength\n                };\n            });\n        }\n        return this.length;\n    };\n\n    /**\n     * Reverses a List in place.  The first List element becomes the last and the last becomes the first.\n     * @return {List}\n     */\n    List.prototype.reverse = function reverse() {\n        var copy = this.toArray(),\n            arr = copy.slice().reverse();\n\n        for (var i = 0, l = arr.length; i < l; i++) {\n            this.set(i, arr[i]);\n        }\n\n        return this;\n    };\n\n    /**\n     * Removes the first element from a List and returns that element. This method changes the length of the List.\n     * @return {*}\n     */\n    List.prototype.shift = function () {\n        if (this.length === 0) {\n            return void(0);\n        }\n\n        var arr = this.toArray(),\n            element = arr.shift(),\n            notifier = Object.getNotifier(this),\n            self = this, len = this.length;\n        notifier.performChange('splice', function () {\n            for (var i = 0, l = arr.length; i < l; i++) {\n                self.set(i, arr[i]);\n            }\n            self.delete(len - 1);\n\n            Object.defineProperty(self, '_length', {\n                value : len - 1,\n                enumerable: false,\n                configurable: true,\n                writable: true\n            });\n            notifier.notify({ type: 'update', name: 'length', oldValue: len });\n\n            return {\n                index : 0,\n                removed : [element],\n                addedCount: 0\n            };\n        });\n\n\n        return element;\n    };\n\n    /**\n     * Returns a shallow copy of a portion of an List.\n     * @param {number} [start]\n     * @param {number} [end]\n     * @return {List}\n     */\n    List.prototype.slice = function (start, end) {\n        return List.fromArray(this.toArray().slice(start, end));\n    };\n\n    /**\n     * Sorts the elements of a List in place and returns the List.\n     * @param {function} [compareFn]\n     * @return {List}\n     */\n    List.prototype.sort = function (compareFn) {\n        var copy = this.toArray(),\n            arr = copy.slice().sort(compareFn);\n        for (var i = 0, l = arr.length; i < l; i++) {\n            this.set(i, arr[i]);\n        }\n        return this;\n    };\n\n    /**\n     * Changes the content of a List, adding new elements while removing old elements.\n     * @return {List}\n     */\n    List.prototype.splice = function () {\n        var returnValue = [],\n            argumentsLength = arguments.length;\n\n        if (argumentsLength > 0) {\n            var arr = this.toArray(),\n                notifier = Object.getNotifier(this),\n                len = this.length,\n                self = this,\n                index = arguments[0],\n                i, l;\n\n            returnValue = Array.prototype.splice.apply(arr, arguments);\n            notifier.performChange('splice', function () {\n                for (i = 0, l = arr.length; i < l; i++) {\n                    var oldValue = self[i];\n                    if (!sameValue(oldValue, arr[i])) {\n                        self[i] = arr[i];\n                        notifier.notify(\n                            i >= len ?\n                                {type : 'add', name : i}:\n                                {type : 'update', name : i, oldValue : oldValue}\n                        );\n                    }\n                }\n\n\n                if (len !== arr.length) {\n                    if (len > arr.length) {\n                        //delete values if the length have been decreased\n                        for (i = arr.length; i < len; i++) {\n                            self.delete(i);\n                        }\n                    }\n\n                    Object.defineProperty(self, '_length', {\n                        value : arr.length,\n                        enumerable: false,\n                        configurable: true,\n                        writable: true\n                    });\n                    notifier.notify({ type: 'update', name: 'length', oldValue: len });\n                }\n                return {\n                    index : index,\n                    removed : returnValue,\n                    addedCount: argumentsLength >= 2 ? argumentsLength - 2 : 0\n                };\n            });\n\n        }\n        return List.fromArray(returnValue);\n    };\n\n    /**\n     * Adds one or more elements to the beginning of a List and returns the new length of the List.\n     * @return {number}\n     */\n    List.prototype.unshift = function () {\n        var argumentsLength  = arguments.length;\n        if (argumentsLength > 0) {\n            var arr = this.toArray(),\n                notifier = Object.getNotifier(this),\n                len = this.length,\n                self = this;\n\n            Array.prototype.unshift.apply(arr, arguments);\n            notifier.performChange('splice', function () {\n                for (var i = 0, l = arr.length; i < l; i++)  {\n                    var oldValue = self[i];\n                    if (!sameValue(oldValue, arr[i])) {\n                        // avoid the usage of the set function and manually\n                        // set the value and notify the changes to avoid the notification of\n                        // multiple length modification\n                        self[i] = arr[i];\n                        notifier.notify(\n                            i >= len ?\n                                {type : 'add', name : i}:\n                                {type : 'update', name : i, oldValue : oldValue}\n                        );\n                    }\n                }\n\n                if (len !== arr.length) {\n                    if (len > arr.length) {\n                        //delete values if the length have been decreased\n                        for (i = arr.length; i < len; i++) {\n                            self.delete(i);\n                        }\n                    }\n                    Object.defineProperty(self, '_length', {\n                        value : arr.length,\n                        enumerable: false,\n                        configurable: true,\n                        writable: true\n                    });\n                    notifier.notify({ type: 'update', name: 'length', oldValue: len });\n                }\n\n                return {\n                    index : 0,\n                    removed : [],\n                    addedCount: argumentsLength\n                };\n            });\n\n        }\n        return this.length;\n    };\n\n    /**\n     * Apply a function against an accumulator and each value of the List (from left-to-right) as to reduce it to a single value.\n     * @param {function} callback\n     * @param {Object} [initialValue]\n     * @return {Object}\n     */\n    List.prototype.reduce =  Array.prototype.reduce;\n\n    /**\n     * Apply a function simultaneously against two values of the array (from right-to-left) as to reduce it to a single value.\n     * @param {function} callback\n     * @param {Object} [initialValue]\n     * @return {Object}\n     */\n    List.prototype.reduceRight =  Array.prototype.reduceRight;\n\n    /**\n     * Returns the first index at which a given element can be found in the List, or -1 if it is not present.\n     * @param {Object} searchElement\n     * @param {number} [fromIndex]\n     * @return {number}\n     */\n    List.prototype.indexOf =  Array.prototype.indexOf;\n\n    /**\n     * Returns the last index at which a given element can be found in the List, or -1 if it is not present. The List is searched backwards, starting at fromIndex.\n     * @param {Object} searchElement\n     * @param {number} [fromIndex]\n     * @return {number}\n     */\n    List.prototype.lastIndexOf = Array.prototype.lastIndexOf;\n\n    /**\n     * Tests whether all elements in the List pass the test implemented by the provided function.\n     * @param {function} callback\n     * @param {Object} [thisObject]\n     * @return {boolean}\n     */\n    List.prototype.every = Array.prototype.every;\n\n    /**\n     * Creates a new List with all elements that pass the test implemented by the provided function\n     * @param {function} callback\n     * @param {Object} [thisObject]\n     * @return {List}\n     */\n    List.prototype.filter = function (callback, thisObject) {\n        return List.fromArray(this.toArray().filter(callback, thisObject));\n    };\n\n    /**\n     * Executes a provided function once per List element.\n     * @param {function} callback\n     * @param {Object} [thisObject]\n     * @return {void}\n     */\n    List.prototype.forEach = Array.prototype.forEach;\n\n    /**\n     * Creates a new List with the results of calling a provided function on every element in this List.\n     * @param {function} callback\n     * @param {Object} [thisObject]\n     * @return {List}\n     */\n    List.prototype.map = function (callback, thisObject) {\n        return List.fromArray(this.toArray().map(callback, thisObject));\n    };\n\n    /**\n     * Tests whether some element in the List passes the test implemented by the provided function.\n     * @param {function} callback\n     * @param {Object} [thisObject]\n     * @return {boolean}\n     */\n    List.prototype.some = Array.prototype.some;\n\n    ObserveUtils.List = List;\n\n})(this);\n(function(){var define,exports;/* globals define, module */\n\n/**\n * A simple library to help you escape HTML using template strings.\n *\n * It's the counterpart to our eslint \"no-unsafe-innerhtml\" plugin that helps us\n * avoid unsafe coding practices.\n * A full write-up of the Hows and Whys are documented\n * for developers at\n *  https://developer.mozilla.org/en-US/Firefox_OS/Security/Security_Automation\n * with additional background information and design docs at\n *  https://wiki.mozilla.org/User:Fbraun/Gaia/SafeinnerHTMLRoadmap\n *\n */\n(function (root, factory) {\n  'use strict';\n  if (typeof define === 'function' && define.amd) {\n    define(factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.Sanitizer = factory();\n  }\n}(this, function () {\n  'use strict';\n\n  var Sanitizer = {\n    _entity: /[&<>\"'/]/g,\n\n    _entities: {\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;',\n      '\"': '&quot;',\n      '\\'': '&apos;',\n      '/': '&#x2F;'\n    },\n\n    getEntity: function (s) {\n      return Sanitizer._entities[s];\n    },\n\n    /**\n     * Escapes HTML for all values in a tagged template string.\n     */\n    escapeHTML: function (strings) {\n      var result = '';\n\n      for (var i = 0; i < strings.length; i++) {\n        result += strings[i];\n        if (i + 1 < arguments.length) {\n          var value = arguments[i + 1] || '';\n          result += String(value).replace(Sanitizer._entity,\n            Sanitizer.getEntity);\n        }\n      }\n\n      return result;\n    },\n    /**\n     * Escapes HTML and returns a wrapped object to be used during DOM insertion\n     */\n    createSafeHTML: function (strings) {\n      var _len = arguments.length;\n      var values = new Array(_len > 1 ? _len - 1 : 0);\n      for (var _key = 1; _key < _len; _key++) {\n        values[_key - 1] = arguments[_key];\n      }\n\n      var escaped = Sanitizer.escapeHTML.apply(Sanitizer,\n        [strings].concat(values));\n      return {\n        __html: escaped,\n        toString: function () {\n          return '[object WrappedHTMLObject]';\n        },\n        info: 'This is a wrapped HTML object. See https://developer.mozilla.or'+\n          'g/en-US/Firefox_OS/Security/Security_Automation for more.'\n      };\n    },\n    /**\n     * Unwrap safe HTML created by createSafeHTML or a custom replacement that\n     * underwent security review.\n     */\n    unwrapSafeHTML: function () {\n      var _len = arguments.length;\n      var htmlObjects = new Array(_len);\n      for (var _key = 0; _key < _len; _key++) {\n        htmlObjects[_key] = arguments[_key];\n      }\n\n      var markupList = htmlObjects.map(function(obj) {\n        return obj.__html;\n      });\n      return markupList.join('');\n    }\n  };\n\n  return Sanitizer;\n\n}));\n})(window);\ndefine([\"exports\"], function (exports) {\n  \"use strict\";\n\n  var _extends = function (child, parent) {\n    child.prototype = Object.create(parent.prototype, {\n      constructor: {\n        value: child,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    child.__proto__ = parent;\n  };\n\n  var Model = (function () {\n    var Model = function Model(properties) {\n      var _this = this;\n      properties = properties || {};\n\n      for (var key in properties) {\n        this[key] = properties[key];\n      }\n\n      this.observableProperties = {};\n\n      Object.observe(this, function (changes) {\n        changes.forEach(function (change) {\n          var handlers = _this.observableProperties[change.name];\n          if (handlers) {\n            handlers.forEach(function (handler) {\n              handler(change);\n            });\n          }\n        });\n      });\n    };\n\n    Model.prototype.on = function (property, handler) {\n      if (typeof handler !== \"function\") {\n        return;\n      }\n\n      if (!this.observableProperties[property]) {\n        ObserveUtils.defineObservableProperties(this, property);\n        this.observableProperties[property] = [];\n      }\n\n      this.observableProperties[property].push(handler);\n    };\n\n    return Model;\n  })();\n\n  exports.Model = Model;\n\n\n  /**\n   * View\n   */\n  var events = {};\n\n  var View = (function () {\n    var View = function View(options) {\n      options = options || {};\n\n      for (var key in options) {\n        this[key] = options[key];\n      }\n\n      if (!this.el) {\n        this.el = document.createElement(\"div\");\n      }\n    };\n\n    View.prototype.init = function (controller) {\n      this.controller = controller;\n\n      return this;\n    };\n\n    View.prototype.layout = function (template) {\n      return template;\n    };\n\n    View.prototype.render = function (params) {\n      var innerHTML = \"\";\n\n      if (params) {\n        if (typeof params === \"object\") {\n          for (var index in params) {\n            var param = params[index];\n            innerHTML += this.template(param);\n          }\n        } else {\n          for (var i = 0; i < params.length; i++) {\n            var param = params[i];\n            innerHTML += this.template(param);\n          }\n        }\n      } else {\n        innerHTML = this.template();\n      }\n\n      this.el.innerHTML = Sanitizer.escapeHTML(this.layout(innerHTML));\n    };\n\n    View.prototype.template = function () {\n      return \"\";\n    };\n\n    View.prototype.$ = function (selector) {\n      return this.el.querySelector(selector);\n    };\n\n    View.prototype.$$ = function (selector) {\n      return this.el.querySelectorAll(selector);\n    };\n\n    View.prototype.on = function (type, selector, handler, scope) {\n      var controller = this.controller;\n      scope = scope || this.el;\n\n      if (!events[type]) {\n        events[type] = [];\n        window.addEventListener(type, delegateHandler, true);\n      }\n\n      events[type].push({\n        selector: selector,\n        handler: handler,\n        controller: controller,\n        scope: scope\n      });\n    };\n\n    View.prototype.off = function (type, selector, handler) {\n      if (!events[type]) {\n        return;\n      }\n\n      events[type] = events[type].filter(function (delegate) {\n        if (typeof handler === \"function\") {\n          return delegate.selector !== selector || delegate.handler !== handler;\n        }\n\n        return delegate.selector !== selector;\n      });\n    };\n\n    return View;\n  })();\n\n  exports.View = View;\n\n\n  /**\n   * Forward an event based on the target's `[data-action]` attr to the controller.\n   * e.g. \"click\" on a `<button data-action=\"cancel\">` goes to controller.cancel()\n   */\n  function handleAction(event, controller) {\n    var action = event.target.dataset.action;\n    if (controller && controller[action]) {\n      controller[action](event);\n    }\n  }\n\n  function delegateHandler(event) {\n    var target = event.target;\n\n    events[event.type].forEach(function (delegate) {\n      if (delegate.scope.contains(target) && target.matches(delegate.selector)) {\n        if (delegate.handler) {\n          delegate.handler.call(target, event);\n        } else {\n          handleAction(event, delegate.controller);\n        }\n      }\n    });\n  }\n\n  var Controller = (function () {\n    var Controller = function Controller(options) {\n      options = options || {};\n\n      for (var key in options) {\n        this[key] = options[key];\n      }\n\n      // Initialize the view (if applicable) when the\n      // controller is instantiated.\n      if (this.view && typeof this.view.init === \"function\") {\n        this.view.init(this);\n      }\n    };\n\n    Controller.prototype.teardown = function () {};\n\n    Controller.prototype.main = function () {};\n\n    return Controller;\n  })();\n\n  exports.Controller = Controller;\n  var RoutingController = (function (Controller) {\n    var RoutingController = function RoutingController(controllers) {\n      if (window.routingController) {\n        console.error(\"Document can only contain one RoutingController\");\n        return;\n      }\n\n      Controller.call(this);\n      this._controllers = controllers;\n      this.activeController = null;\n      window.routingController = this;\n      window.addEventListener(\"hashchange\", this.route.bind(this));\n    };\n\n    _extends(RoutingController, Controller);\n\n    RoutingController.prototype.route = function () {\n      var route = window.location.hash.slice(1);\n      for (var routeName in this._controllers) {\n        var regexp = new RegExp(\"^\" + routeName + \"$\");\n        var match = route.match(regexp);\n        var controller = this._controllers[routeName];\n        if (match && controller) {\n          if (this.activeController) {\n            this.activeController.teardown();\n          }\n\n          this.activeController = controller;\n          controller.main.apply(controller, match.slice(1));\n          break;\n        }\n      }\n    };\n\n    RoutingController.prototype.controller = function (id) {\n      return this._controllers[id];\n    };\n\n    return RoutingController;\n  })(Controller);\n\n  exports.RoutingController = RoutingController;\n  var Service = (function () {\n    var Service = function Service() {\n      this._listeners = {};\n      this._dispatchedEvents = {};\n    };\n\n    Service.prototype.addEventListener = function (name, callback, trigger) {\n      var _this2 = this;\n      if (!this._listeners[name]) {\n        this._listeners[name] = [callback];\n      } else {\n        this._listeners[name].push(callback);\n      }\n\n      if (trigger && this._dispatchedEvents[name] !== undefined) {\n        setTimeout(function () {\n          callback(_this2._dispatchedEvents[name]);\n        });\n      }\n    };\n\n    Service.prototype.removeEventListener = function (name, callback) {\n      if (!this._listeners[name]) {\n        return;\n      }\n\n      var listenerIndex;\n      this._listeners[name].find(function (listener, index) {\n        if (listener === callback) {\n          listenerIndex = index;\n        }\n\n        return listenerIndex !== undefined;\n      });\n\n      if (listenerIndex !== undefined) {\n        this._listeners[name].splice(listenerIndex, 1);\n      }\n    };\n\n    Service.prototype._dispatchEvent = function (name, params) {\n      if (!this._listeners[name]) {\n        return;\n      }\n\n      this._dispatchedEvents[name] = params || null;\n\n      this._listeners[name].forEach(function (listener) {\n        listener(params);\n      });\n    };\n\n    return Service;\n  })();\n\n  exports.Service = Service;\n});"],"sourceRoot":"/source/"}